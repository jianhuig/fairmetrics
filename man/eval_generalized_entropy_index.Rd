% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MultiGroupFairness.R
\name{eval_generalized_entropy_index}
\alias{eval_generalized_entropy_index}
\title{Examine Generalized Entropy Index of a model
#' This function evaluates the generalized entropy index in model
performance metrics across different groups.}
\usage{
eval_generalized_entropy_index(
  data,
  outcome,
  group,
  probs,
  alpha = 2,
  cutoff = 0.5,
  digits = 2
)
}
\arguments{
\item{data}{Data frame containing the outcome, predicted outcome, and
group}

\item{outcome}{Name of the outcome variable, it must be binary}

\item{group}{Name of the group}

\item{probs}{Name of the predicted outcome variable}

\item{cutoff}{Threshold for the predicted outcome, default is 0.5}

\item{digits}{Number of digits to round the results to, default is 2}
}
\value{
A data frame containing the following elements:
\itemize{
\item Metric: The names of the metrics calculated.
\item Values for each group.
\item Generalized_entropy_index: The generalized entropy index for the model
}
}
\description{
Examine Generalized Entropy Index of a model
#' This function evaluates the generalized entropy index in model
performance metrics across different groups.
}
\examples{
\donttest{
library(FairnessTutorial)
library(dplyr)
library(randomForest)
data("mimic_preprocessed")
set.seed(123)
train_data <- mimic_preprocessed |>
  dplyr::filter(dplyr::row_number() <= 700)
# Fit a random forest model
rf_model <- randomForest::randomForest(factor(day_28_flg) ~ ., data = train_data, ntree = 1000)
# Test the model on the remaining data
test_data <- mimic_preprocessed |>
  dplyr::mutate(gender = ifelse(gender_num == 1, "Male", "Female"))|>
  dplyr::filter(dplyr::row_number() > 700)

test_data$pred <- predict(rf_model, newdata = test_data, type = "prob")[, 2]

# Fairness evaluation
# We will use sex as the sensitive attribute and day_28_flg as the outcome.
# We choose threshold = 0.41 so that the overall FPR is around 5\%.

# Evaluate Generalized Entropy Index
eval_generalized_entropy_index(
  dat = test_data,
  outcome = "day_28_flg",
  group = "gender",
  probs = "pred"
)
}

}
